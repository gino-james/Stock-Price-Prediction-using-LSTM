# -*- coding: utf-8 -*-
"""train_lstm

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UjoOz_5S7_WbAwcGTpZvftVm31KVJXP6
"""

import numpy as np
import pandas as pd
import joblib
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense, Dropout
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import mean_squared_error

# Load dataset
df = pd.read_csv("AAPL.csv", parse_dates=["Date"], index_col="Date")
df = df[["Close"]]  # Keep only Date and Close price

# Split data into training (2012-2018) and testing (2019)
train = df[df.index.year < 2019]
test = df[df.index.year >= 2019]

# Scale data
scaler = MinMaxScaler(feature_range=(0,1))
train_scaled = scaler.fit_transform(train)
test_scaled = scaler.transform(test)

# Function to create sequences
def create_sequences(data, time_step=30):
    X, y = [], []
    for i in range(len(data) - time_step):
        X.append(data[i : i + time_step])
        y.append(data[i + time_step])
    return np.array(X), np.array(y)

# Prepare training and testing data
time_step = 30
X_train, y_train = create_sequences(train_scaled, time_step)
X_test, y_test = create_sequences(test_scaled, time_step)

# Reshape for LSTM [samples, time steps, features]
X_train = X_train.reshape((X_train.shape[0], X_train.shape[1], 1))
X_test = X_test.reshape((X_test.shape[0], X_test.shape[1], 1))

# Build LSTM Model
model = Sequential([
    LSTM(50, return_sequences=True, input_shape=(time_step, 1)),
    Dropout(0.2),
    LSTM(50, return_sequences=False),
    Dropout(0.2),
    Dense(25),
    Dense(1)
])

# Compile Model
model.compile(optimizer="adam", loss="mean_squared_error")

# Train Model
model.fit(X_train, y_train, epochs=50, batch_size=32, validation_data=(X_test, y_test), verbose=1)

# Save model & scaler
model.save("lstm_stock_model.h5")
joblib.dump(scaler, "scaler.pkl")

print("âœ… Model and scaler saved successfully!")